import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from loguru import logger
from app.utils.driver import create_firefox_driver


def scroll_down_slowly(driver, step=500, delay=2):
    """–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–Ω–∏–∑, —á—Ç–æ–±—ã –ø–æ–¥–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã."""
    last_height = driver.execute_script("return document.body.scrollHeight")
    while True:
        # –°–∫—Ä–æ–ª–ª–∏–º –≤–Ω–∏–∑ –Ω–∞ step –ø–∏–∫—Å–µ–ª–µ–π
        driver.execute_script(f"window.scrollBy(0, {step});")
        time.sleep(delay)
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            break  # –ï—Å–ª–∏ –≤—ã—Å–æ—Ç–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å ‚Äì –∑–Ω–∞—á–∏—Ç, –≤—Å—ë –ø—Ä–æ–≥—Ä—É–∑–∏–ª–æ—Å—å
        last_height = new_height
    logger.info("‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É.")


def find_element_with_retries(driver, xpath, max_attempts=5, delay=3):
    """–ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç, –¥–µ–ª–∞—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π."""
    attempts = 0
    while attempts < max_attempts:
        try:
            element = WebDriverWait(driver, delay).until(
                EC.presence_of_element_located((By.XPATH, xpath))
            )
            logger.info(f"‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: {xpath} (–ø–æ–ø—ã—Ç–∫–∞ {attempts+1})")
            return element.text.strip()
        except Exception:
            logger.warning(
                f"‚ö† –≠–ª–µ–º–µ–Ω—Ç {xpath} –Ω–µ –Ω–∞–π–¥–µ–Ω (–ø–æ–ø—ã—Ç–∫–∞ {attempts+1})")
            time.sleep(delay)
            attempts += 1
    return None


def get_tgstat_channel_stats(channel_url):
    """–ü–∞—Ä—Å–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É Telegram-–∫–∞–Ω–∞–ª–∞ —Å Tgstat."""
    driver = create_firefox_driver()

    try:
        logger.info(f"üåç –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É {channel_url}")
        driver.get(channel_url)
        time.sleep(5)  # –ñ–¥—ë–º –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É

        logger.info("üìú –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–¥–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
        scroll_down_slowly(driver)

        stats = {}

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        stats["subscribers"] = find_element_with_retries(
            driver, "//div[contains(text(), '–ø–æ–¥–ø–∏—Å—á–∏–∫–∏')]/preceding-sibling::h2")
        stats["average_views"] = find_element_with_retries(
            driver, "//div[contains(text(), '—Å—Ä–µ–¥–Ω–∏–π –æ—Ö–≤–∞—Ç')]/preceding-sibling::h2")
        stats["engagement_rate"] = find_element_with_retries(
            driver, "//div[contains(text(), '–≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (ER)')]/preceding-sibling::h2")
        stats["creation_date"] = find_element_with_retries(
            driver, "//span[contains(text(), '–∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω')]/preceding-sibling::b")
        stats["total_posts"] = find_element_with_retries(
            driver, "//div[contains(text(), '–ø—É–±–ª–∏–∫–∞—Ü–∏–∏')]/preceding-sibling::h2")
        stats["citation_index"] = find_element_with_retries(
            driver, "//div[contains(text(), '–∏–Ω–¥–µ–∫—Å —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')]/preceding-sibling::h2")

        logger.info(f"üìä –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {stats}")

        return {"channel_url": channel_url, "stats": stats}

    finally:
        logger.info("‚ùé –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        driver.quit()
